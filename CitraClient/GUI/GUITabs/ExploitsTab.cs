using CitraClient.Modules.Exploits;
using UnityEngine;

namespace CitraClient.GUI.GUITabs
{
	public static class ExploitsTab
	{
		private const string CONTROLS = "<color=red><b>Controls:</b></color> <b><color=green>Arrow Keys</color> = Axis || <color=green>Q</color> = Down || <color=green>E</color> = Up</b>";

		private static int _yOffset;

		public static void Tab()
		{
			_yOffset = 100;
			if (Swastika.SphereObj != null)
			{
				UnityEngine.GUI.Label(new Rect(200f, _yOffset, 500f, 20f), "<color=red><b>Controls:</b></color> <b><color=green>Arrow Keys</color> = Axis || <color=green>Q</color> = Down || <color=green>E</color> = Up</b>");
				_yOffset += 30;
				UnityEngine.GUI.Label(new Rect(200f, _yOffset, 500f, 20f), "<b>Swastika Position:</b> " + Swastika.SphereObj.transform.position.ToString());
			}
			_yOffset += 30;
			Swastika.Acceleration = UnityEngine.GUI.HorizontalSlider(new Rect(200f, _yOffset, 200f, 20f), Swastika.Acceleration, 1f, 10f);
			UnityEngine.GUI.Label(new Rect(200f, _yOffset + 10, 400f, 20f), $"Acceleration Value: ({Swastika.Acceleration})");
			_yOffset += 30;
			Swastika.Speed = UnityEngine.GUI.HorizontalSlider(new Rect(200f, _yOffset, 200f, 20f), Swastika.Speed, 1f, 100f);
			UnityEngine.GUI.Label(new Rect(200f, _yOffset + 10, 400f, 20f), $"Speed Value: ({Swastika.Speed})");
			_yOffset += 30;
			if (UnityEngine.GUI.Button(new Rect(200f, _yOffset, 200f, 20f), Swastika.isSwastikaControl ? "<b>SWASTIKA ON</b>" : "<b>SWASTIKA OFF</b>"))
			{
				Swastika.ToggleSwastikaControl();
			}
			_yOffset += 30;
			if (UnityEngine.GUI.Button(new Rect(200f, _yOffset, 200f, 20f), "<b>Bring To Self</b>"))
			{
				Swastika.CreateSphereObj();
			}
		}
	}
}
